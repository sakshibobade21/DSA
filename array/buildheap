//{ Driver Code Starts
//Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;
class GFG {
	public static void main (String[] args) {
		Scanner sc=new Scanner(System.in);
		PrintWriter out = new PrintWriter(System.out);
		int t=sc.nextInt();
		
		while(t-->0)
		{
		    int n=sc.nextInt();
		    
		    int arr[]=new int[n];
		    
		    for(int i=0;i<n;i++)
		    arr[i]=sc.nextInt();
		    
		    int k=sc.nextInt();
		    Solution ob = new Solution();
		    out.println(ob.kthSmallest(arr, 0, n-1, k));
		}
		out.flush();
	}
}

// } Driver Code Ends


//User function Template for Java
void heapify(int arr[], int n, int i) {
    int largest = i;
    left = 2 * i + 1;
    right = 2 * i + 1;
    
    if(left < n && arr[left] > arr[largest]) {
        largest = left;
    }
    if(right < n && arr[rigth] > arr[largest]) {
        largest = right;
    }
    
    if(largest != i) {
        int temp = arr[largest];
        arr[largest] = arr[i];
        arr[i] = temp;
    }
    
    heapify(arr, n, largest)
}

void buildHeap(int arr[], int n) {
    int nonLeaf = (n/2)-1;
    for(int i=nonleaf; i>=0; i--) {
        heapify(arr, n, i);
    }
}
class Solution{
    public static int kthSmallest(int[] arr, int l, int r, int k) 
    { 
        //Your code here
        buildHeap();
    } 
}
